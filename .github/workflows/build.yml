name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Private Repository
        uses: actions/checkout@v3
        with:
          repository: Hantex9/easybook-app-refactor
          token: ${{ secrets.EASYBOOK_RELEASE_AUTOMATION_REPO_TOKEN }}
          ref: ${{ github.event.inputs.branch }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Extract app.json info
        id: extract-transform-name
        run: |
          ANDROID_PACKAGE=$(jq -r '.expo.android.package' app.json)
          APP_NAME=$(jq -r '.expo.name' app.json)
          echo "ANDROID_PACKAGE=$ANDROID_PACKAGE" >> $GITHUB_ENV
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

      - name: Decode and Create Google Play Json Key
        run: |
          echo "${{ secrets.GOOGLE_PLAY_JSON_KEY_BASE64 }}" | base64 --decode > google_play_json_key.json

      - name: Build Android
        run: |
          npm run build:android

      - name: Upload to Play Store
        env:
          ANDROID_PACKAGE_NAME: ${{ env.ANDROID_PACKAGE }}
          ANDROID_APP_NAME: ${{ env.APP_NAME }}
          GOOGLE_PLAY_JSON_KEY: google_play_json_key.json
        run: fastlane upload_aab_to_play_store
